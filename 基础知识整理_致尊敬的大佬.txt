1、c++三大特性，分别作用；三种继承的特点；

2、虚析构函数、虚函数、虚继承、虚基类    什么函数不可以被定义为虚函数（详解见文末）

3、重载、重写（覆盖）、隐藏、

5、new/delete和malloc/free区别联系

6、C++内存中的几个区域


7、拷贝构造函数   一定要引用么？


8、指针与引用区别与联系      以及使用场景


常用于函数的参数传递和返回值

9、指针传递、值传递、引用传递             指针传递与引用传递细节可参考  文末指针和引用讲解

10、static、const、volatile关键字的作用及应用范围

11、声明和定义

12、sizeof 和 strlen 的区别

13、常量指针、指针常量


14、c++四种强制类型转化

15、c++ 八种基本数据类型

15、类class与结构体struct   结构体struct跟联合体union

16、内联函数   使用场景


17、Linux /proc/$pid部分内容详解

18、指针函数、函数指针


19、


20、进程和线程的区别与联系？进程间通信方式？


19、tcp、udp区别联系   三次握手细节及原因   四次**


21、设计模式    常用的


22、程序运行得比较慢，有什么优化方案


、学到了啥？  下一步规划

、C11的特性（智能指针、anto等等）

、基于对象和面向对象的区别？

、内存为什么要对齐？

、gdb的使用：1、显示线程；2、一个函数的输出作为另一个函数的输出；3、崩溃文件...

、项目的并发量级      有没有性能问题 诊断和优化的生产经验    项目的真实调优过程

、一些编程小技巧
a、能用引用的地方尽量用引用，这比指针高效，因为引用无需检验
b、
c、


、this指针的作用

、讲一下堆与找的区别与联系（内存分配Heap和stack的区别）
为啥malloc申请到的堆的空间是连续的？   是因为前面有个空间存储了长度？


、加载动态库的几种方式？运行时调用的几种方式？


、七层网络模型、5层网络模型、以及分别对应的协议

、为啥从main开始？

、epoll和select的区别是什么？epoll高效率的原因是什么？（分别适用在什么应用场景）

、野指针   内存泄漏    指针悬挂      （分别是什么？代表什么？怎么造成？怎么避免解决？）
（多个指针指向一块内存，free掉一个指针之后，别的指针就成了野指针？）


、查bug思路

、linux常用命令
    linux怎么看进程下面的线程


、算法题：

冒泡排序、快速排序、二分查找
设计栈  入栈  出栈  找最小元素
设计string  成员
编写简单的回显函数
创建一个单向链表，插入十个数据
创建一个二叉树，插入是个数据
通用二元一次方程函数
图像边缘检测原理
c++的STL中，有哪几种容器？  STL里面vector、list、map、set底层数据结构   以及应用场景
查询多，插入少  用什么？为什么？
socket通信（了解：127.0.0.1::port1能不能与127.0.0.1::port2建链）
